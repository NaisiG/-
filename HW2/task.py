# В данной задаче выбор парадигмы не имеет принципиального значения, 
# так как вся логика сводится к генерации таблицы умножения и её выводу на экран. 
# Однако для данной задачи удобно использовать императивную парадигму, 
# так как мы последовательно строим таблицу умножения построчно и выводим её на экран.

def multiplication_table(n):
    for i in range(1, n + 1):
        for j in range(1, 10):
            result = i * j
            print(f"{i} * {j} = {result}")

# Пример использования
n = 5
multiplication_table(n)

#В этом коде функция multiplication_table принимает число n, ограничивающее таблицу умножения. 
# Затем с помощью двух вложенных циклов происходит генерация таблицы умножения для чисел от 1 до n.
# Внутренний цикл перебирает числа от 1 до 9, и для каждого числа производится умножение с текущим числом i. 
# Полученный результат выводится на экран с помощью функции print().